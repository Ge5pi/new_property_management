datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator kysely {
  provider = "prisma-kysely"
}

enum FeesType {
  PERCENTAGE
  FIXED
}

enum DefaultRenewalTerms {
  MONTHLY
  YEARLY
}

enum LateFeeType {
  PERCENTAGE
  FLAT
}

enum EligibleCharges {
  EVERY_CHARGE
  ALL_RECURRING_CHARGES
  ONLY_RECURRING_RENT
}

enum GracePeriodType {
  NUMBER_OF_DAY
  TILL_DATE_OF_MONTH
  NO_GRACE_PERIOD
}

enum PaymentTypeChoices {
  NET_INCOME
  FLAT
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  firstName     String?
  lastName      String?
  username      String?   @unique
  isActive      Boolean   @default(true)
  isStaff       Boolean   @default(false)
  isSuperuser   Boolean   @default(false)
  passwordHash  String
  associatedSubscriptionId String?  @db.VarChar(255)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  roles         Role[]    @relation("UserRoles")
  groups        Group[]   @relation("UserGroups")
}

model Role {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  users       User[]   @relation("UserRoles")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Group {
  id          String   @id @default(cuid())
  name        String   @unique
  users       User[]   @relation("UserGroups")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Property {
  id                                String                        @id @default(cuid())
  associatedSubscriptionId          String?
  name                              String
  address                           String
  property_type_id                  String
  is_cat_allowed                    Boolean                       @default(false)
  is_dog_allowed                    Boolean                       @default(false)
  is_smoking_allowed                Boolean                       @default(false)
  additional_fees_gl_account      String?
  additional_fees_percentage      Int?
  addition_fees_suppress            Boolean                       @default(false)
  lease_fees_amount                 Decimal?
  lease_fees_percentage             Int?
  lease_fees_commission_type        FeesType?
  tax_authority                     String?
  portfolio                         String?
  description                       String?
  renters_tax_location_code         String?
  property_owner_license            String?
  year_built                        Int?
  management_start_date             DateTime?
  management_end_date               DateTime?
  management_end_reason             String?
  nsf_fee                           Decimal?
  management_fees_amount            Decimal?
  management_fees_percentage        Int?
  management_commission_type        FeesType?
  notes                             String?
  maintenance_limit_amount          Decimal?
  insurance_expiration_date         DateTime?
  has_home_warranty_coverage        Boolean                       @default(false)
  home_warranty_company             String?
  home_warranty_expiration_date     DateTime?
  maintenance_notes                 String?
  default_lease_template_id         String?
  default_lease_agenda              String?
  default_lease_renewal_template_id String?
  default_lease_renewal_agenda      String?
  default_lease_renewal_letter_template String?
  default_renewal_terms             DefaultRenewalTerms?
  default_renewal_charge_by         Decimal?
  default_renewal_additional_fee    Decimal?
  rental_application_template_id    String?
  upcoming_activities               PropertyUpcomingActivity[]
  utility_billings                  PropertyUtilityBilling[]
  late_fee_policy                   PropertyLateFeePolicy?
  attachments                       PropertyAttachment[]
  lease_template_attachments        PropertyLeaseTemplateAttachment[]
  lease_renewal_attachments         PropertyLeaseRenewalAttachment[]
  photos                            PropertyPhoto[]
  owners                            PropertyOwner[]
  rentable_items                    RentableItem[]
  units                             Unit[]
  unit_types                        UnitType[]
  projects                          Project[]
  createdAt                         DateTime                      @default(now())
  updatedAt                         DateTime                      @updatedAt
}

model PropertyUpcomingActivity {
  id              String   @id @default(cuid())
  parent_property Property @relation(fields: [parent_property_id], references: [id])
  parent_property_id String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model PropertyUtilityBilling {
  id                            String   @id @default(cuid())
  utility                       String
  vendor_id                     String
  vendor_bill_gl                String
  tenant_charge_gl              String
  owner_contribution_percentage Int
  tenant_contribution_percentage Int
  parent_property               Property @relation(fields: [parent_property_id], references: [id])
  parent_property_id            String
  createdAt                     DateTime @default(now())
  updatedAt                     DateTime @updatedAt
}

model PropertyLateFeePolicy {
  id                       String            @id @default(cuid())
  start_date               DateTime?
  end_date                 DateTime?
  late_fee_type            LateFeeType?
  base_amount_fee          Decimal?
  eligible_charges         EligibleCharges?
  charge_daily_late_fees   Boolean           @default(false)
  daily_amount_per_month_max Decimal?
  grace_period_type        GracePeriodType?
  grace_period             Int?
  parent_property          Property          @relation(fields: [parent_property_id], references: [id])
  parent_property_id       String            @unique
  createdAt                DateTime          @default(now())
  updatedAt                DateTime          @updatedAt
}

model PropertyAttachment {
  id                 String   @id @default(cuid())
  name               String
  file               String
  parent_property    Property @relation(fields: [parent_property_id], references: [id])
  parent_property_id String
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model PropertyLeaseTemplateAttachment {
  id                 String   @id @default(cuid())
  name               String
  file               String
  parent_property    Property @relation(fields: [parent_property_id], references: [id])
  parent_property_id String
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model PropertyLeaseRenewalAttachment {
  id                 String   @id @default(cuid())
  name               String
  file               String
  parent_property    Property @relation(fields: [parent_property_id], references: [id])
  parent_property_id String
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model PropertyPhoto {
  id                 String   @id @default(cuid())
  image              String
  is_cover           Boolean  @default(false)
  parent_property    Property @relation(fields: [parent_property_id], references: [id])
  parent_property_id String
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  @@unique([parent_property_id, is_cover], name: "property_unique_cover_pic")
}

model PropertyOwner {
  id                 String             @id @default(cuid())
  percentage_owned   Int
  parent_property    Property           @relation(fields: [parent_property_id], references: [id])
  parent_property_id String
  payment_type       PaymentTypeChoices
  contract_expiry    DateTime
  reserve_funds      Decimal
  fiscal_year_end    String
  ownership_start_date DateTime
  owner_id           String
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt

  @@unique([parent_property_id, owner_id])
}

model RentableItem {
  id                 String   @id @default(cuid())
  name               String
  description        String?
  amount             Decimal
  gl_account         String
  tenant_id          String
  status             Boolean  @default(false)
  parent_property    Property @relation(fields: [parent_property_id], references: [id])
  parent_property_id String
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model Unit {
  id                      String                 @id @default(cuid())
  name                    String
  unit_type               UnitType               @relation(fields: [unit_type_id], references: [id])
  unit_type_id            String
  market_rent             Decimal?
  future_market_rent      Decimal?
  effective_date          DateTime?
  application_fee         Decimal?
  estimate_turn_over_cost Decimal?
  address                 String?
  ready_for_show_on       DateTime?
  virtual_showing_available Boolean              @default(false)
  utility_bills           Boolean              @default(false)
  utility_bills_date      DateTime?
  lock_box                String?
  description             String?
  non_revenues_status     Boolean              @default(false)
  balance                 Decimal?
  total_charges           Decimal?
  total_credit            Decimal?
  due_amount              Decimal?
  total_payable           Decimal?
  parent_property         Property               @relation(fields: [parent_property_id], references: [id])
  parent_property_id      String
  upcoming_activities     UnitUpcomingActivity[]
  photos                  UnitPhoto[]
  leases                  Lease[]
  applicants              Applicant[]
  service_requests        ServiceRequest[]
  inspections             Inspection[]
  fixed_assets            FixedAsset[]
  projects                Project[]
  createdAt               DateTime               @default(now())
  updatedAt               DateTime               @updatedAt
}

model UnitUpcomingActivity {
  id        String   @id @default(cuid())
  unit      Unit     @relation(fields: [unit_id], references: [id])
  unit_id   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UnitPhoto {
  id        String   @id @default(cuid())
  image     String
  is_cover  Boolean  @default(false)
  unit      Unit     @relation(fields: [unit_id], references: [id])
  unit_id   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([unit_id, is_cover], name: "unit_unique_cover_pic")
}

model UnitType {
  id                      String            @id @default(cuid())
  name                    String
  bed_rooms               Int?
  bath_rooms              Int?
  square_feet             Int?
  market_rent             Decimal?
  future_market_rent      Decimal?
  effective_date          DateTime?
  application_fee         Decimal?
  estimate_turn_over_cost Decimal?
  is_cat_allowed          Boolean           @default(false)
  is_dog_allowed          Boolean           @default(false)
  is_smoking_allowed      Boolean           @default(false)
  marketing_title         String?
  marketing_description   String?
  marketing_youtube_url   String?
  parent_property         Property          @relation(fields: [parent_property_id], references: [id])
  parent_property_id      String
  units                   Unit[]
  photos                  UnitTypePhoto[]
  amenities               UnitTypeAmenity[]
  createdAt               DateTime          @default(now())
  updatedAt               DateTime          @updatedAt
}

model UnitTypePhoto {
  id          String   @id @default(cuid())
  image       String
  is_cover    Boolean  @default(false)
  unit_type   UnitType @relation(fields: [unit_type_id], references: [id])
  unit_type_id String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([unit_type_id, is_cover], name: "unit_type_unique_cover_pic")
}

model UnitTypeAmenity {
  id          String   @id @default(cuid())
  amenity_id  String
  unit_type   UnitType @relation(fields: [unit_type_id], references: [id])
  unit_type_id String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([amenity_id, unit_type_id])
}

enum LeaseStatus {
  ACTIVE
  CLOSED
}

enum LeaseType {
  FIXED
  AT_WILL
}

enum RentCycleChoices {
  WEEKLY
  MONTHLY
  QUARTERLY
  SIX_MONTHS
  YEARLY
}

enum ApplicantTypeChoices {
  FINANCIALlY_INDEPENDENT
  DEPENDENT
}

enum RentalApplicationStatusChoices {
  DRAFT
  PENDING
  APPROVED
  REJECTED
  ON_HOLD_OR_WAITING
}

model LeaseTemplate {
  id                      String   @id @default(cuid())
  name                    String
  description             String?
  rules_and_policies      String[]
  condition_of_premises   String[]
  right_of_inspection     Boolean  @default(true)
  conditions_of_moving_out String[]
  releasing_policies      String[]
  final_statement         String?
  leases                  Lease[]
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
}

model Lease {
  id                      String        @id @default(cuid())
  rental_application      RentalApplication @relation(fields: [rental_application_id], references: [id])
  rental_application_id   String        @unique
  lease_type              LeaseType
  start_date              DateTime
  end_date                DateTime
  lease_template          LeaseTemplate? @relation(fields: [lease_template_id], references: [id])
  lease_template_id       String?
  rent_cycle              RentCycleChoices
  amount                  Decimal
  gl_account              String
  description             String?       @default("rent")
  due_date                DateTime
  status                  LeaseStatus   @default(ACTIVE)
  closed_on               DateTime?
  unit                    Unit          @relation(fields: [unit_id], references: [id])
  unit_id                 String
  rules_and_policies      String[]
  condition_of_premises   String[]
  right_of_inspection     Boolean?
  conditions_of_moving_out String[]
  releasing_policies      String[]
  final_statement         String?
  secondary_tenants       SecondaryTenant[]
  primary_tenant          Tenant?
  createdAt               DateTime      @default(now())
  updatedAt               DateTime      @updatedAt

  @@unique([status, unit_id], name: "one_active_lease_for_unit")
}

model SecondaryTenant {
  id            String   @id @default(cuid())
  first_name    String
  last_name     String
  email         String?
  phone_number  String
  birthday      DateTime
  tax_payer_id  String
  description   String?
  lease         Lease    @relation(fields: [lease_id], references: [id])
  lease_id      String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model RentalApplicationTemplate {
  id                 String   @id @default(cuid())
  name               String
  description        String?
  general_info       Boolean  @default(true)
  personal_details   Boolean  @default(true)
  rental_history     Boolean  @default(true)
  financial_info     Boolean  @default(true)
  dependents_info    Boolean  @default(true)
  other_info         Boolean  @default(true)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model Applicant {
  id                                String             @id @default(cuid())
  first_name                        String
  last_name                         String
  email                             String
  allow_email_for_rental_application Boolean          @default(false)
  phone_number                      String
  unit                              Unit               @relation(fields: [unit_id], references: [id])
  unit_id                           String
  rental_application              RentalApplication?
  createdAt                         DateTime           @default(now())
  updatedAt                         DateTime           @updatedAt
}

model RentalApplication {
  id                                String                              @id @default(cuid())
  applicant                         Applicant                           @relation(fields: [applicant_id], references: [id])
  applicant_id                      String                              @unique
  status                            RentalApplicationStatusChoices      @default(DRAFT)
  desired_move_in_date              DateTime?
  legal_first_name                  String?
  middle_name                       String?
  legal_last_name                   String?
  application_type                  ApplicantTypeChoices?
  phone_number                      String[]
  emails                            String[]
  notes                             String?
  birthday                          DateTime?
  ssn_or_tin                        String?
  driving_license_number            String?
  employer_name                     String?
  employer_address                  String?
  employer_address_2                String?
  employer_phone_number             String?
  employment_city                   String?
  employment_zip_code               String?
  employment_country                String?
  monthly_salary                    Decimal?
  position_held                     String?
  years_worked                      Int?
  supervisor_name                   String?
  supervisor_phone_number           String?
  supervisor_email                  String?
  supervisor_title                  String?
  is_defendant_in_any_lawsuit       Boolean                             @default(false)
  is_convicted                      Boolean                             @default(false)
  have_filed_case_against_landlord  Boolean                             @default(false)
  is_smoker                         Boolean                             @default(false)
  general_info                      Boolean                             @default(false)
  personal_details                  Boolean                             @default(false)
  rental_history                    Boolean                             @default(false)
  financial_info                    Boolean                             @default(false)
  dependents_info                   Boolean                             @default(false)
  other_info                        Boolean                             @default(false)
  is_general_info_filled            Boolean                             @default(false)
  is_personal_details_filled        Boolean                             @default(false)
  is_rental_history_filled          Boolean                             @default(false)
  is_financial_info_filled          Boolean                             @default(false)
  is_dependents_filled              Boolean                             @default(false)
  is_other_info_filled              Boolean                             @default(false)
  leases                            Lease[]
  emergency_contacts                RentalApplicationEmergencyContact[]
  residential_history               RentalApplicationResidentialHistory[]
  financial_information             RentalApplicationFinancialInformation[]
  additional_income                 RentalApplicationAdditionalIncome[]
  dependents                        RentalApplicationDependent[]
  pets                              RentalApplicationPets[]
  attachments                       RentalApplicationAttachment[]
  createdAt                         DateTime                            @default(now())
  updatedAt                         DateTime                            @updatedAt
}

model RentalApplicationEmergencyContact {
  id                  String            @id @default(cuid())
  name                String
  phone_number        String
  relationship        String
  address             String
  rental_application  RentalApplication @relation(fields: [rental_application_id], references: [id])
  rental_application_id String
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
}

model RentalApplicationResidentialHistory {
  id                    String            @id @default(cuid())
  current_address       String
  current_address_2     String?
  current_city          String?
  current_zip_code      String?
  current_country       String
  resident_from         DateTime?
  resident_to           DateTime?
  landlord_name         String?
  landlord_phone_number String?
  landlord_email        String?
  reason_of_leaving     String?
  monthly_rent          Decimal?
  current_state         String?
  rental_application    RentalApplication @relation(fields: [rental_application_id], references: [id])
  rental_application_id String
  createdAt             DateTime          @default(now())
  updatedAt             DateTime          @updatedAt
}

model RentalApplicationFinancialInformation {
  id                    String            @id @default(cuid())
  name                  String
  account_type          String
  bank                  String
  account_number        String
  rental_application    RentalApplication @relation(fields: [rental_application_id], references: [id])
  rental_application_id String
  createdAt             DateTime          @default(now())
  updatedAt             DateTime          @updatedAt
}

model RentalApplicationAdditionalIncome {
  id                    String            @id @default(cuid())
  monthly_income        Decimal
  source_of_income      String
  rental_application    RentalApplication @relation(fields: [rental_application_id], references: [id])
  rental_application_id String
  createdAt             DateTime          @default(now())
  updatedAt             DateTime          @updatedAt
}

model RentalApplicationDependent {
  id                    String            @id @default(cuid())
  first_name            String
  last_name             String
  birthday              DateTime
  relationship          String
  rental_application    RentalApplication @relation(fields: [rental_application_id], references: [id])
  rental_application_id String
  createdAt             DateTime          @default(now())
  updatedAt             DateTime          @updatedAt
}

model RentalApplicationPets {
  id                    String            @id @default(cuid())
  name                  String
  pet_type              String
  weight                Float?
  age                   Int?
  rental_application    RentalApplication @relation(fields: [rental_application_id], references: [id])
  rental_application_id String
  createdAt             DateTime          @default(now())
  updatedAt             DateTime          @updatedAt
}

model RentalApplicationAttachment {
  id                    String            @id @default(cuid())
  name                  String
  file                  String
  rental_application    RentalApplication @relation(fields: [rental_application_id], references: [id])
  rental_application_id String
  createdAt             DateTime          @default(now())
  updatedAt             DateTime          @updatedAt
}

enum TaxIdentityChoices {
  SSN
  EIN
}

model Tenant {
  id                        String                  @id @default(cuid())
  associatedSubscriptionId  String?
  first_name                String
  last_name                 String
  email                     String
  phone_number              String
  lease                     Lease                   @relation(fields: [lease_id], references: [id])
  lease_id                  String                  @unique
  user_id                   String
  upcoming_activities       TenantUpcomingActivity[]
  attachments               TenantAttachment[]
  createdAt                 DateTime                @default(now())
  updatedAt                 DateTime                @updatedAt
}

model TenantUpcomingActivity {
  id        String   @id @default(cuid())
  tenant    Tenant   @relation(fields: [tenant_id], references: [id])
  tenant_id String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TenantAttachment {
  id        String   @id @default(cuid())
  name      String
  file      String
  tenant    Tenant   @relation(fields: [tenant_id], references: [id])
  tenant_id String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VendorType {
  id          String   @id @default(cuid())
  name        String
  description String
  vendors     Vendor[]
  work_orders WorkOrder[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Vendor {
  id                                String             @id @default(cuid())
  associatedSubscriptionId          String?
  first_name                        String
  last_name                         String
  company_name                      String
  use_company_name_as_display_name  Boolean
  vendor_type                       VendorType         @relation(fields: [vendor_type_id], references: [id])
  vendor_type_id                    String
  gl_account                        String
  personal_contact_numbers          String[]
  business_contact_numbers          String[]
  personal_emails                   String[]
  business_emails                   String[]
  website                           String
  insurance_provide_name            String
  insurance_policy_number           String
  insurance_expiry_date             DateTime
  tax_identity_type                 TaxIdentityChoices
  tax_payer_id                      String
  addresses                         VendorAddress[]
  attachments                       VendorAttachment[]
  work_orders                       WorkOrder[]
  purchase_orders                   PurchaseOrder[]
  inventory                         Inventory[]
  createdAt                         DateTime           @default(now())
  updatedAt                         DateTime           @updatedAt
}

model VendorAddress {
  id              String   @id @default(cuid())
  street_address  String
  city            String
  state           String
  country         String
  zip             String
  vendor          Vendor   @relation(fields: [vendor_id], references: [id])
  vendor_id       String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model VendorAttachment {
  id        String   @id @default(cuid())
  name      String
  file      String
  vendor    Vendor   @relation(fields: [vendor_id], references: [id])
  vendor_id String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Owner {
  id                            String                  @id @default(cuid())
  first_name                    String
  last_name                     String
  company_name                  String?
  personal_contact_numbers      String[]
  company_contact_numbers       String[]
  personal_emails               String[]
  company_emails                String[]
  street_address                String?
  city                          String?
  state                         String?
  zip                           String?
  country                       String?
  tax_payer                     String
  tax_payer_id                  String
  bank_account_title            String?
  bank_name                     String?
  bank_branch                   String?
  bank_routing_number           String?
  bank_account_number           String?
  notes                         String?
  is_company_name_as_tax_payer  Boolean                 @default(false)
  is_use_as_display_name        Boolean                 @default(false)
  upcoming_activities           OwnerUpcomingActivity[]
  createdAt                     DateTime                @default(now())
  updatedAt                     DateTime                @updatedAt
}

model OwnerUpcomingActivity {
  id        String   @id @default(cuid())
  owner     Owner    @relation(fields: [owner_id], references: [id])
  owner_id  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ChargeType {
  PERCENT
  FLAT
}

enum OrderTypeChoices {
  INTERNAL
  RESIDENT
  UNIT_TURN
}

enum PriorityChoices {
  URGENT
  NORMAL
  LOW
}

enum CycleChoices {
  DAILY
  WEEKLY
  MONTHLY
  YEARLY
  SIX_MONTHS
}

enum StatusChoices {
  OPEN
  ASSIGNED
  UNASSIGNED
  COMPLETED
  PENDING
  IN_PROGRESS
}

enum ConditionChoices {
  OKAY
  NOT_OKAY
}

enum FixedAssetsStatus {
  IN_STORAGE
  INSTALLED
}

model ServiceRequest {
  id                                String                     @id @default(cuid())
  unit                              Unit                       @relation(fields: [unit_id], references: [id])
  unit_id                           String
  order_type                        OrderTypeChoices
  permission_to_enter               Boolean                    @default(false)
  additional_information_for_entry  String?
  priority                          PriorityChoices
  subject                           String
  description                       String
  attachments                       ServiceRequestAttachment[]
  work_orders                       WorkOrder[]
  createdAt                         DateTime                   @default(now())
  updatedAt                         DateTime                   @updatedAt
}

model ServiceRequestAttachment {
  id                String         @id @default(cuid())
  name              String
  file              String
  service_request   ServiceRequest @relation(fields: [service_request_id], references: [id])
  service_request_id String
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
}

model WorkOrder {
  id                  String         @id @default(cuid())
  is_recurring        Boolean        @default(false)
  cycle               CycleChoices?
  status              StatusChoices  @default(OPEN)
  order_type          OrderTypeChoices
  job_description     String?
  vendor_instructions String?
  vendor_trade        String?
  vendor_type         VendorType     @relation(fields: [vendor_type_id], references: [id])
  vendor_type_id      String
  vendor              Vendor         @relation(fields: [vendor_id], references: [id])
  vendor_id           String
  email_vendor        Boolean
  request_receipt     Boolean
  assign_to_id        String?
  owner_approved      Boolean
  follow_up_date      DateTime
  service_request     ServiceRequest @relation(fields: [service_request_id], references: [id])
  service_request_id  String
  labors              Labor[]
  createdAt           DateTime       @default(now())
  updatedAt           DateTime       @updatedAt
}

model Labor {
  id           String    @id @default(cuid())
  title        String
  date         DateTime
  hours        Int
  description  String
  work_order   WorkOrder @relation(fields: [work_order_id], references: [id])
  work_order_id String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Inspection {
  id        String   @id @default(cuid())
  name      String
  date      DateTime
  unit      Unit     @relation(fields: [unit_id], references: [id])
  unit_id   String
  areas     Area[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Area {
  id          String      @id @default(cuid())
  name        String
  inspection  Inspection  @relation(fields: [inspection_id], references: [id])
  inspection_id String
  items       AreaItem[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model AreaItem {
  id        String           @id @default(cuid())
  name      String
  condition ConditionChoices
  area      Area             @relation(fields: [area_id], references: [id])
  area_id   String
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
}

model Project {
  id              String                 @id @default(cuid())
  name            String
  description     String
  status          StatusChoices          @default(PENDING)
  parent_property Property               @relation(fields: [parent_property_id], references: [id])
  parent_property_id String
  units           Unit[]
  select_all_units Boolean
  budget          Decimal
  gl_account      String
  start_date      DateTime
  end_date        DateTime?
  expenses        ProjectExpense[]
  createdAt       DateTime               @default(now())
  updatedAt       DateTime               @updatedAt
}

model ProjectExpense {
  id           String                   @id @default(cuid())
  title        String
  description  String
  amount       Decimal
  date         DateTime
  assigned_to_id String
  project      Project                  @relation(fields: [project_id], references: [id])
  project_id   String
  attachments  ProjectExpenseAttachment[]
  createdAt    DateTime                 @default(now())
  updatedAt    DateTime                 @updatedAt
}

model ProjectExpenseAttachment {
  id                String         @id @default(cuid())
  name              String
  file              String
  project_expense   ProjectExpense @relation(fields: [project_expense_id], references: [id])
  project_expense_id String
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
}

model PurchaseOrder {
  id                   String                    @id @default(cuid())
  vendor               Vendor?                   @relation(fields: [vendor_id], references: [id])
  vendor_id            String?
  description          String
  required_by_date     DateTime
  tax                  Decimal?
  tax_charge_type      ChargeType?
  shipping             Decimal?
  shipping_charge_type ChargeType?
  discount             Decimal?
  discount_charge_type ChargeType?
  notes                String?
  items                PurchaseOrderItem[]
  attachments          PurchaseOrderAttachment[]
  createdAt            DateTime                  @default(now())
  updatedAt            DateTime                  @updatedAt
}

model PurchaseOrderItem {
  id              String        @id @default(cuid())
  inventory_item  Inventory     @relation(fields: [inventory_item_id], references: [id])
  inventory_item_id String
  cost            Decimal
  quantity        Int
  purchase_order  PurchaseOrder @relation(fields: [purchase_order_id], references: [id])
  purchase_order_id String
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}

model PurchaseOrderAttachment {
  id               String        @id @default(cuid())
  name             String
  file             String
  purchase_order   PurchaseOrder @relation(fields: [purchase_order_id], references: [id])
  purchase_order_id String
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
}

model Inventory {
  id                  String              @id @default(cuid())
  name                String
  item_type_id        String?
  description         String
  part_number         String
  vendor              Vendor?             @relation(fields: [vendor_id], references: [id])
  vendor_id           String?
  quantity            Int
  expense_account     String
  cost                Decimal
  location_id         String?
  bin_or_shelf_number String?
  purchase_order_items PurchaseOrderItem[]
  fixed_assets        FixedAsset[]
  createdAt           DateTime            @default(now())
  updatedAt           DateTime            @updatedAt
}

model FixedAsset {
  id                       String            @id @default(cuid())
  status                   FixedAssetsStatus?
  placed_in_service_date   DateTime?
  warranty_expiration_date DateTime?
  unit                     Unit              @relation(fields: [unit_id], references: [id])
  unit_id                  String
  inventory_item           Inventory         @relation(fields: [inventory_item_id], references: [id])
  inventory_item_id        String
  quantity                 Int
  cost                     Decimal
  createdAt                DateTime          @default(now())
  updatedAt                DateTime          @updatedAt
}
